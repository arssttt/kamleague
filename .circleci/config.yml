# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.15
  aws-code-deploy: circleci/aws-code-deploy@1.0.0
jobs:
  test:
    docker:
      - image: circleci/elixir:1.9
        environment:
          MIX_ENV: test
          PGHOST: 127.0.0.1
          POSTGRES_USER: circleci
      - image: circleci/postgres:10.1-alpine
        environment:
          POSTGRES_USER: circleci

    working_directory: ~/kamleague/website
    steps:
      - checkout
      - run:
          name: Set up hex and rebar
          command: mix local.hex --force && mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache

      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache

      - run:
          name: Install and compile Elixir dependencies
          command: mix do deps.get, compile

      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"

      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Check Elixir formatting
          command: mix format --check-formatted

      - run:
          name: Create dir for test results
          command: mkdir -p /tmp/test-results

      - run:
          name: Run tests
          command: mix test

      - store_test_results:
          path: /tmp/test-results

  build:
    docker:
      - image: circleci/elixir:1.9
        environment:
          BUILD_PATH: ~/kamleague/builds
          MIX_ENV: prod
          SERVICE_NAME: kamleague-website.service

    working_directory: ~/kamleague/website
    steps:
      - checkout
      - run:
          name: Set up hex and rebar
          command: mix local.hex --force && mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache

      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache

      - run:
          name: Install and compile Elixir dependencies
          command: mix do deps.get, compile

      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"

      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - run:
          name: Install npm packages
          command: npm install --prefix ./assets

      - run:
          name: Compile the assets
          command: npm run deploy --prefix ./assets

      - run:
          name: Build release
          command: mix release --overwrite

workflows:
  version: 2.1
  test_build_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - aws-code-deploy/deploy:
          application-name: kamleague
          bundle-bucket: kamleague
          bundle-key: kamleague
          deployment-group: production
          service-role-arn: arn:aws:iam::794323266463:role/AWSCodeDeployRole
